import Point from "./Point";
import { CanvasDirective, GraphicImplType, SvgDirective } from "./types";
import GeomObject from "./base/GeomObject";
import Transformation from "./transformation";
import Geomtoy from ".";
declare class Rectangle extends GeomObject {
    #private;
    constructor(owner: Geomtoy, originX: number, originY: number, width: number, height: number);
    constructor(owner: Geomtoy, originX: number, originY: number, size: [number, number]);
    constructor(owner: Geomtoy, originCoordinate: [number, number], width: number, height: number);
    constructor(owner: Geomtoy, originCoordinate: [number, number], size: [number, number]);
    constructor(owner: Geomtoy, originPoint: Point, width: number, height: number);
    constructor(owner: Geomtoy, originPoint: Point, size: [number, number]);
    get name(): string;
    get uuid(): string;
    get originX(): number;
    set originX(value: number);
    get originY(): number;
    set originY(value: number);
    get originCoordinate(): [number, number];
    set originCoordinate(value: [number, number]);
    get originPoint(): Point;
    set originPoint(value: Point);
    get width(): number;
    set width(value: number);
    get height(): number;
    set height(value: number);
    get size(): [number, number];
    set size(value: [number, number]);
    static fromPoints(owner: Geomtoy, point1: Point, point2: Point): Rectangle;
    getCornerPoint(corner: "leftTop" | "rightTop" | "rightBottom" | "leftBottom"): Point;
    getBounding(side: "left" | "right" | "top" | "bottom"): number;
    move(offsetX: number, offsetY: number): Rectangle;
    moveSelf(offsetX: number, offsetY: number): Rectangle;
    inflate(size: [number, number]): Rectangle;
    inflateSelf(size: [number, number]): this;
    clone(): Rectangle;
    apply(transformation: Transformation): GeomObject;
    getGraphic(type: GraphicImplType): (SvgDirective | CanvasDirective)[];
    toString(): string;
    toObject(): object;
    toArray(): any[];
}
export default Rectangle;
