import Point from "./Point";
import { Size, Coordinate, CanvasDirective, GraphicImplType, SvgDirective } from "./types";
import GeomObject from "./base/GeomObject";
import Transformation from "./transformation";
declare class Rectangle extends GeomObject {
    #private;
    constructor(x: number, y: number, width: number, height: number);
    constructor(x: number, y: number, size: Size);
    constructor(position: Coordinate | Point, width: number, height: number);
    constructor(position: Coordinate | Point, size: Size);
    get originPoint(): Point;
    set originPoint(value: Point);
    get x(): number;
    set x(value: number);
    get y(): number;
    set y(value: number);
    get width(): number;
    set width(value: number);
    get height(): number;
    set height(value: number);
    get size(): Size;
    set size(value: Size);
    static fromPoints(point1: Point, point2: Point): Rectangle;
    getCornerPoint(corner: "leftTop" | "rightTop" | "rightBottom" | "leftBottom"): Point;
    getBounding(side: "left" | "right" | "top" | "bottom"): number;
    move(offsetX: number, offsetY: number): Rectangle;
    moveSelf(offsetX: number, offsetY: number): Rectangle;
    inflate(size: Size): Rectangle;
    inflateSelf(size: Size): this;
    clone(withTransformation?: boolean): Rectangle;
    apply(transformation: Transformation): GeomObject;
    getGraphic(type: GraphicImplType): (SvgDirective | CanvasDirective)[];
    toString(): string;
    toObject(): object;
    toArray(): any[];
}
export default Rectangle;
