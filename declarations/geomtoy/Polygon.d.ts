import Point from "./Point";
import Rectangle from "./Rectangle";
import GeomObject from "./base/GeomObject";
import Geomtoy from ".";
declare class Polygon extends GeomObject {
    #private;
    constructor(owner: Geomtoy, pointCoordinates: Array<[number, number]>);
    constructor(owner: Geomtoy, points: Array<Point>);
    constructor(owner: Geomtoy, ...pointCoordinates: Array<[number, number]>);
    constructor(owner: Geomtoy, ...points: Array<Point>);
    get name(): string;
    get uuid(): string;
    get points(): Point[];
    set points(value: Point[]);
    get pointCoordinates(): [number, number][];
    set pointCoordinates(value: [number, number][]);
    getPointCount(): number;
    getPoint(index: number): Point | null;
    setPoint(index: number, point: Point): boolean;
    appendPoint(point: Point): void;
    prependPoint(point: Point): void;
    insertPoint(index: number, point: Point): boolean;
    removePoint(index: number): boolean;
    isPointsConcyclic(): void;
    getPerimeter(): number;
    getArea(signed?: boolean): number;
    getMeanPoint(): number[];
    getCentroidPoint(): Point;
    getBoundingRectangle(): Rectangle;
    clone(): GeomObject;
    toString(): string;
    toArray(): any[];
    toObject(): object;
}
export default Polygon;
